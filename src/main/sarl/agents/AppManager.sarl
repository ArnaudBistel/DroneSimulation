package agents

import controller.MainWindowController
import gui.DroneBody
import gui.WarehouseBody
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Destroy
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import map.SimulationMap
import org.arakhne.afc.math.geometry.d2.i.Point2i

/** 
 * @author arnaud
 * 
 */
agent AppManager {
	uses Logging, Lifecycle, DefaultContextInteractions

	var map : SimulationMap

	on Initialize {
		loggingName = "AppManager"
		info("AppManager created!")
		var controller = occurrence.parameters.get(0) as MainWindowController
		var droneBody = new DroneBody(200, 200)
		var warehouseBody : WarehouseBody = new WarehouseBody(600,600)
		controller.addDroneBody(droneBody)
		controller.addWarehouseBody(warehouseBody)
		spawnInContext(1, Drone, defaultContext, droneBody)
		spawnInContext(1, Warehouse, defaultContext, warehouseBody)
		var t  : Point2i = new Point2i(0, 0)
		
		map = new SimulationMap(15,4) //10 Clients + 1 Warehouse
	}

	on Destroy {
	}
	
	def initMap(){
		
	}
}




